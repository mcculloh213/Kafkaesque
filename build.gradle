apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'maven-publish'


android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"


    defaultConfig {
        minSdkVersion 26
        targetSdkVersion 29
        versionCode 1
        versionName getVersionName()

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

// GitHub Packages publishing
//def githubProperties = new Properties()
//githubProperties.load(new FileInputStream(rootProject.file("github.properties")))
//
//def getVersionName = { ->
//    return "1.0.1"
//}
//def getArtifactId = { ->
//    return "kafkaesque"
//}
//
//publishing {
//    publications {
//        bar(MavenPublication) {
//            groupId "com.github.mcculloh213"
//            artifactId getArtifactId()
//            version getVersionName()
//            logger.info("Build Directory: $buildDir")
//            artifact("$buildDir/outputs/aar/${getArtifactId()}-release.aar")
//
//            // generate .pom file with transitive dependencies
//            pom.withXml {
//                final dependenciesNode = asNode().appendNode('dependencies')
//                ext.addDependency = { Dependency dep, String scope ->
//                    if (dep.group == null || dep.version == null || dep.name == null || dep.name == "unspecified")
//                        return
//                    final dependencyNode = dependenciesNode.appendNode('dependency')
//                    dependencyNode.appendNode('groupId', dep.group)
//                    dependencyNode.appendNode('artifactId', dep.name)
//                    dependencyNode.appendNode('version', dep.version)
//                    dependencyNode.appendNode('scope', scope)
//                    if (!dep.transitive) {
//                        final exclusionNode = dependencyNode.appendNode('exclusions').appendNode('exclusion')
//                        exclusionNode.appendNode('groupId', '*')
//                        exclusionNode.appendNode('artifactId', '*')
//                    } else if (!dep.properties.excludeRules.empty) {
//                        final exclusionNode = dependencyNode.appendNode('exclusions').appendNode('exclusion')
//                        dep.properties.excludeRules.each { ExcludeRule rule ->
//                            exclusionNode.appendNode('groupId', rule.group ?: '*')
//                            exclusionNode.appendNode('artifactId', rule.module ?: '*')
//                        }
//                    }
//                }
//                configurations.compile.getDependencies().each { dep -> addDependency(dep, "compile") }
//                configurations.api.getDependencies().each { dep -> addDependency(dep, "compile") }
//                configurations.implementation.getDependencies().each { dep -> addDependency(dep, "runtime") }
//            }
//        }
//    }
//
//    repositories {
//        maven {
//            name = "GitHubPackages"
//            url = uri("https://maven.pkg.github.com")
//            credentials {
//                username = githubProperties['gpr.usr'] ?: System.getenv("GPR_USER")
//                password = githubProperties['gpr.key'] ?: System.getenv("GPR_API_KEY")
//            }
//        }
//    }
//}
// END

dependencies {
    implementation deps.jetbrains.kotlin.stdlib.jdk7

    // RxJava + Android & Kotlin support
    implementation deps.reactivex.rxjava
    implementation deps.reactivex.rxkotlin
    api deps.reactivex.rxandroid

    testImplementation deps.junit
}
